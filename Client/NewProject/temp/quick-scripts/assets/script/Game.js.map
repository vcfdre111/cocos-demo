{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","Hands","default","type","ValueType","cardPrefab","Prefab","times","onLoad","start","getRandomArray","drawCard","index","console","log","checkFalsh","update","dt","spacing","newcard","instantiate","node","addChild","getComponent","setNum","setPosition","minNum","maxNum","n","rdmArray","i","rdm","exist","getRandom","indexOf","Math","floor","random","suitCount","length","checkStraight","j","reDraw","destroyAllChildren","testStr","count"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        Hands:{\r\n            default:[],\r\n            type: cc.ValueType\r\n        },\r\n\r\n        cardPrefab:{\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        times:{\r\n            default: [],\r\n            type: cc.ValueType\r\n\r\n        },\r\n    },\r\n    \r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.times=[0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n    },\r\n\r\n    start () {\r\n        this.Hands=this.getRandomArray(0,51,5);\r\n        this.drawCard();\r\n        \r\n        for (let index = 0; index < 5; index++) {\r\n            this.times[this.Hands[index]%13]++\r\n        }\r\n        console.log(this.times);\r\n        this.checkFalsh();\r\n        console.log('Falsh: '+this.checkFalsh());\r\n        \r\n    },\r\n\r\n    update (dt) {\r\n        \r\n    },\r\n\r\n    drawCard: function(){\r\n        var spacing =-300;\r\n        for (let index = 0; index < 5; index++) {\r\n            var newcard= cc.instantiate(this.cardPrefab);\r\n            this.node.addChild(newcard);\r\n            newcard.getComponent('card').setNum(this.Hands[index]);\r\n            newcard.setPosition(spacing,0);\r\n            \r\n            spacing+=150;\r\n        }\r\n    },\r\n\r\n    getRandomArray: function(minNum, maxNum, n) {    //隨機產生不重覆的n個數字\r\n        var rdmArray = [n];     //儲存產生的陣列\r\n    \r\n        for(var i=0; i<n; i++) {\r\n            var rdm = 0;        //暫存的亂數\r\n    \r\n            do {\r\n                var exist = false;          //此亂數是否已存在\r\n                rdm =this.getRandom(minNum, maxNum);    //取得亂數\r\n                \r\n                //檢查亂數是否存在於陣列中，若存在則繼續回圈\r\n                if(rdmArray.indexOf(rdm) != -1) exist = true;\r\n                \r\n            } while (exist);    //產生沒出現過的亂數時離開迴圈\r\n            \r\n            rdmArray[i] = rdm;\r\n        }\r\n        return rdmArray;\r\n    },\r\n    getRandom: function (minNum, maxNum) { //取得 minNum(最小值) ~ maxNum(最大值) 之間的亂數\r\n        return Math.floor( Math.random() * (maxNum - minNum + 1) ) + minNum;\r\n    },\r\n\r\n    checkFalsh: function(){\r\n        var suitCount=[0,0,0,0];\r\n        for (let index = 0; index <5; index++) {\r\n            suitCount[Math.floor(this.Hands[index]/13)]++;\r\n        }\r\n        for (let index = 0; index < suitCount.length; index++) {\r\n            if(suitCount[index]==5){\r\n                return true;\r\n            }\r\n            \r\n        }\r\n        return false;\r\n    },\r\n    checkStraight: function(){\r\n        for (let index = 0; index < 11; index++) {\r\n            if(this.times[index]==1){\r\n                console.log('Checking straight...');\r\n                for (let j = index+1; j < index+5; j++) {\r\n                    console.log('checking '+(index+2)+\"at\"+(j-index)+\"times\")\r\n                    if(this.times[j]!=1){\r\n                        console.log('Not'+(index+2))\r\n                        break;\r\n                    }\r\n                    if(j == index+4){\r\n                    console.log(\"It's\"+(index+2)+\"straignt\");\r\n                    return true;\r\n                    \r\n                    }\r\n                }\r\n            }\r\n            \r\n            \r\n        }return false;\r\n    },\r\n    reDraw: function(){\r\n        this.node.destroyAllChildren();\r\n        this.onLoad();\r\n        this.start();\r\n        console.log(this.Hands);\r\n        \r\n    },\r\n    testStr: function(){\r\n        var count=0\r\n        while(!this.checkStraight()&&count<500){\r\n            console.log('this is '+count+' times test');\r\n            this.reDraw();\r\n            count++;\r\n        }\r\n    }\r\n});\r\n"]}