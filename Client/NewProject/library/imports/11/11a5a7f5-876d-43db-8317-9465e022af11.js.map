{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\GameCtrl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["import GameModel from \"./GameModel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport enum Phase {\r\n    Waiting = 0,\r\n    Betting = 1,\r\n    BetEnd = 2,\r\n    Result = 3,\r\n    Ending = 4\r\n\r\n}\r\n\r\n@ccclass\r\nexport default class GameCtrl extends cc.Component {\r\n\r\n\r\n\r\n\r\n    @property\r\n    Model: GameModel = null;\r\n\r\n    @property\r\n    betTime = false;\r\n\r\n    @property\r\n    GameStage: number[] = [0, 0]\r\n\r\n    @property\r\n    Chip: number = 0;\r\n\r\n    onLoad() {\r\n        this.register_evnet();\r\n        this.Model = this.getComponent(\"GameModel\");\r\n    }\r\n\r\n    // start() { }\r\n\r\n    /**\r\n     * register evnet table\r\n     */\r\n    register_evnet() {\r\n        let self = this\r\n\r\n\r\n        cc.game.on(\"changeStage\", function changeClientStage(stage: string) {\r\n            switch (stage) {\r\n                case \"waiting\":\r\n                    cc.game.emit(\"changePhaseLabel\", \"Waiting Phase\");\r\n                    break;\r\n                case \"bet\":\r\n                    cc.game.emit(\"changePhaseLabel\", \"Betting Phase\");\r\n                    self.betTime = !self.betTime;\r\n                    break;\r\n                case \"bet end\":\r\n                    cc.game.emit(\"changePhaseLabel\", \"Bet end\");\r\n                    self.betTime = !self.betTime;\r\n                    break;\r\n                case \"show\":\r\n                    cc.game.emit(\"changePhaseLabel\", \"Result Phase\");\r\n                    self.getGameResult();\r\n                    break;\r\n                case \"end\":\r\n                    cc.game.emit(\"changePhaseLabel\", \"Ending Phase\");\r\n                    cc.game.emit(\"clearCard\");\r\n                    cc.game.emit(\"clearBet\");\r\n                    for (let index = 0; index < 3; index++) {\r\n                        self.changeBetLabel(index, 0);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n        })\r\n\r\n        cc.game.on(\"stageTime\", function stageTime(time: number) {\r\n            cc.game.emit(\"updateTime\", time)\r\n        })\r\n\r\n        cc.game.on(\"returnCard\", function sendCard(card: number[]) {\r\n            cc.game.emit(\"drawCard\", card);\r\n        })\r\n\r\n        cc.game.on(\"updatePlayerInformation\", function returnPlayerInformation(name: string, money: number) {\r\n            cc.game.emit(\"setPlayerInformation\", name, money);\r\n            cc.game.emit(\"setName\", self.Model.LocalPlayerName);\r\n            cc.game.emit(\"updateMoney\", self.Model.LocalPlayerMoney);\r\n        })\r\n    }\r\n\r\n\r\n    // update (dt) {}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public chipSelect(event, amount: number) {\r\n        console.log(this.Chip = amount);\r\n    }\r\n\r\n    public betting(event, area: number) {\r\n        if ((this.Model.LocalPlayerMoney - this.Chip >= 0) && this.betTime) {\r\n            this.Model.LocalPlayerMoney -= this.Chip;\r\n            cc.game.emit(\"addBet\", this.Chip, area);\r\n            cc.game.emit(\"receiveLocalBet\", this.Model.LocalPlayerName, this.Chip, area);\r\n            ;\r\n        } else if (!this.betTime) {\r\n            console.log(\"not bet time\");\r\n        } else {\r\n            console.log(\"Betting fail,not enough money\")\r\n        }\r\n        this.changeBetLabel(area, this.Model.getLocalbet()[area]);\r\n        cc.game.emit(\"updateMoney\", this.Model.LocalPlayerMoney);\r\n    }\r\n\r\n    public changeBetLabel(area: number, amount: number) {\r\n        cc.game.emit(\"playerBetDisplay\", area, amount);\r\n    }\r\n\r\n    public getGameResult() {\r\n        cc.game.emit(\"getCard\")\r\n\r\n    }\r\n}\r\n"]}